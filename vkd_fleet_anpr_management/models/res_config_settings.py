from odoo import models, fields, api, _
import secrets


class ResConfigSettings(models.TransientModel):
    _inherit = 'res.config.settings'

    # Settings for OCR Engine Choice
    ocr_engine = fields.Selection(
        [('easyocr', 'EasyOCR (Local)'),
         ('gemini', 'Gemini (Cloud API)')],
        string='Final OCR Engine',
        config_parameter='anpr.ocr_engine',
        default='easyocr',
        help="Select the default engine to use for the final OCR step on a captured plate."
    )

    # Setting for the Gemini API Key
    gemini_api_key = fields.Char(
        string='Gemini (OpenRouter) API Key',
        config_parameter='anpr.gemini_api_key',
        help="Your secret API key from OpenRouter.ai"
    )

    flask_server_url = fields.Char(
        string='ANPR Flask Server URL',
        config_parameter='anpr.flask_server_url',
        help="The base URL of the running ANPR Flask application, e.g., http://192.168.1.100:8080"
    )

    # NEW: JWT Secret Key for securing the API
    jwt_secret_key = fields.Char(
        string='API Secret Key',
        config_parameter='anpr.jwt_secret_key',
        help="A secret key shared between Odoo and the Flask ANPR server to secure API calls. A strong key is generated by default.",
        default=lambda self: secrets.token_hex(32)
    )

    # NEW: Method that the Flask app will call to get all settings at once
    @api.model
    def get_anpr_settings(self):
        get_param = self.env['ir.config_parameter'].sudo().get_param
        return {
            'ocr_engine': get_param('anpr.ocr_engine', 'easyocr'),
            'api_key': get_param('anpr.gemini_api_key'),
            'jwt_secret': get_param('anpr.jwt_secret_key')
        }
